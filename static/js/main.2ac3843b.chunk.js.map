{"version":3,"sources":["Components/ContentBox.js","Components/MainAppBar.js","Components/InfoBox.js","Components/TableView.js","App.js","serviceWorker.js","index.js"],"names":["useStyle","makeStyles","theme","root","padding","spacing","ContentBox","country","cases","newCases","Box","Typography","variant","style","color","start","end","duration","separator","gutterBottom","display","justifyContent","mainImage","width","MainAppBar","classes","className","src","cardStyle","borderRadius","boxShadow","InfoBox","title","total","Grid","item","xs","sm","Card","CardContent","component","marginTop","TableView","sortedData","data","sort","a","b","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","key","countryInfo","flag","scope","todayCases","deaths","todayDeaths","recovered","todayRecovered","tests","selectStyle","fontSize","App","useState","countries","setCountries","setCountry","corona","setCorona","tableData","setTableData","useEffect","fetch","then","response","json","totalCases","active","lastUpdate","updated","name","value","iso2","getCountryData","handleCountryChange","event","countryCode","target","url","Container","maxWidth","container","FormControl","fullWidth","marginBottom","Select","onChange","MenuItem","background","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"kXAMMA,EAAWC,aAAW,SAAAC,GAAK,MAAK,CAClCC,KAAM,CACFC,QAASF,EAAMG,QAAQ,QAqChBC,MAhCf,YAAiD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAEjC,OADgBT,IAER,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,gBAA4CL,EAA5C,KACA,kBAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAACC,MAAO,YAEpC,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKR,EACLS,SAAU,EACVC,UAAU,OAKlB,kBAACP,EAAA,EAAD,CAAYC,QAAQ,YAAYO,cAAY,EAACN,MAAO,CAACC,MAAO,YAA5D,IAGI,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKP,EACLQ,SAAU,EACVC,UAAU,SC5B5BlB,EAAWC,aAAW,SAAAC,GAAK,MAAK,CAClCC,KAAK,CACDiB,QAAS,OACTC,eAAgB,SAChBjB,QAAS,aAEbkB,UAAU,CACNC,MAAO,SAiBAC,MAZf,WACI,IAAMC,EAAUzB,IAChB,OAEI,yBAAK0B,UAAWD,EAAQtB,MACpB,yBAAKwB,IAAI,qCAAqCD,UAAWD,EAAQH,c,kBCnBvEtB,EAAWC,aAAW,SAAAC,GAAK,MAAK,CAClC0B,UAAW,CACPxB,QAASF,EAAMG,QAAQ,GACvBwB,aAAc,GACdC,UAAW,kCAmCJC,MA7Bf,YAAmD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOxB,EAAkB,EAAlBA,SAAUI,EAAQ,EAARA,MAChCY,EAAUzB,IAChB,OACI,kBAACkC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CAAMZ,UAAWD,EAAQG,UAAWf,MAAOA,GACvC,kBAAC0B,EAAA,EAAD,KACI,kBAAC5B,EAAA,EAAD,CAAYG,MAAM,gBAAgBK,cAAY,GAC7Ca,GAED,kBAACrB,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,MAGnC,kBAAC,IAAD,CACIzB,MAAO,EACPC,IAAKiB,EACLhB,SAAU,EACVC,UAAU,OAId,kBAACP,EAAA,EAAD,CAAYG,MAAM,iBAAlB,IACEL,O,8DC1BhBT,EAAWC,aAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACFsC,UAAWvC,EAAMG,QAAQ,QA2DlBqC,MAvDf,YAA4B,IAElBC,EAFiB,EAAPC,KAEQC,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEtC,MAAQuC,EAAEvC,OAAS,EAAI,KAIzDiB,EAAUzB,IAEhB,OACI,yBAAKa,MAAO,CAAC4B,UAAW,KACpB,kBAAC9B,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACA,kBAACoC,EAAA,EAAD,CAAgBR,UAAWS,IAAOvB,UAAWD,EAAQtB,MACrD,kBAAC+C,EAAA,EAAD,CAAOC,aAAW,iBACd,4EACA,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,eACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,aACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,WAGJ,kBAACC,EAAA,EAAD,KACCb,EAAWc,KAAI,SAAClD,GAAD,OACZ,kBAAC8C,EAAA,EAAD,CAAUK,IAAKnD,EAAQA,SACnB,kBAAC+C,EAAA,EAAD,KACI,yBAAK3B,IAAKpB,EAAQoD,YAAYC,KAAMrC,MAAO,MAE/C,kBAAC+B,EAAA,EAAD,CAAWd,UAAU,KAAKqB,MAAM,OAC3BtD,EAAQA,SAEb,kBAAC+C,EAAA,EAAD,CAAWC,MAAM,SACb,kBAAC5C,EAAA,EAAD,CAAYC,QAAQ,SAAS4B,UAAU,KAAKjC,EAAQC,OACpD,kBAACG,EAAA,EAAD,CAAYC,QAAQ,UAAU4B,UAAU,IAAI1B,MAAM,iBAAlD,IAAoEP,EAAQuD,aAEhF,kBAACR,EAAA,EAAD,CAAWC,MAAM,SACb,kBAAC5C,EAAA,EAAD,CAAYC,QAAQ,SAAS4B,UAAU,KAAKjC,EAAQwD,QACpD,kBAACpD,EAAA,EAAD,CAAYC,QAAQ,UAAU4B,UAAU,IAAI1B,MAAM,iBAAlD,IAAoEP,EAAQyD,cAEhF,kBAACV,EAAA,EAAD,CAAWC,MAAM,SACb,kBAAC5C,EAAA,EAAD,CAAYC,QAAQ,SAAS4B,UAAU,KAAKjC,EAAQ0D,WACpD,kBAACtD,EAAA,EAAD,CAAYC,QAAQ,UAAU4B,UAAU,IAAI1B,MAAM,iBAAlD,IAAoEP,EAAQ2D,iBAEhF,kBAACZ,EAAA,EAAD,CAAWC,MAAM,SAAShD,EAAQ4D,gBC/CpDnE,EAAWC,aAAW,SAAAC,GAAK,MAAK,CACpCC,KAAM,CACFC,QAASF,EAAMG,QAAQ,IAE3B+D,YAAY,CACVC,SAAU,QAwHCC,MApHf,WACE,IAAM7C,EAAUzB,IADH,EAEqBuE,mBAAS,IAF9B,mBAENC,EAFM,KAEKC,EAFL,OAGiBF,mBAAS,aAH1B,mBAGNhE,EAHM,KAGGmE,EAHH,OAIeH,mBAAS,IAJxB,mBAINI,EAJM,KAIEC,EAJF,OAKqBL,mBAAS,IAL9B,mBAKNM,EALM,KAKKC,EALL,KAQbC,qBAAU,WACRC,MAAM,sCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACrC,GACLgC,EAAU,CACRQ,WAAYxC,EAAKpC,MACjB6E,OAAQzC,EAAKyC,OACbtB,OAAQnB,EAAKmB,OACbE,UAAWrB,EAAKqB,UAChBH,WAAYlB,EAAKkB,WACjBI,eAAgBtB,EAAKsB,eACrBF,YAAapB,EAAKoB,YAClBsB,WAAY1C,EAAK2C,eAGtB,IAEHR,qBAAU,YACY,uCAAG,sBAAAjC,EAAA,sEACfkC,MAAM,4CACXC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACrC,GACL,IAAMrC,EAAUqC,EAAKa,KAAI,SAAClD,GAAD,MAAc,CACrCiF,KAAMjF,EAAQA,QACdkF,MAAOlF,EAAQoD,YAAY+B,SAE7BjB,EAAalE,GACbuE,EAAalC,MATM,2CAAH,qDAYpB+C,KACC,IAEH,IAAMC,EAAmB,uCAAG,WAAOC,GAAP,iBAAA/C,EAAA,6DACpBgD,EAAcD,EAAME,OAAON,MAC3BO,EAAsB,cAAhBF,EAAA,wFAEoCA,GAEhDpB,EAAWoB,GANe,SAOpBd,MAAMgB,GACTf,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACrC,GACLgC,EAAU,CACRQ,WAAYxC,EAAKpC,MACjB6E,OAAQzC,EAAKyC,OACbtB,OAAQnB,EAAKmB,OACbE,UAAWrB,EAAKqB,UAChBH,WAAYlB,EAAKkB,WACjBI,eAAgBtB,EAAKsB,eACrBF,YAAapB,EAAKoB,YAClBsB,WAAY1C,EAAK2C,aAlBG,2CAAH,sDAyBzB,OACE,yBAAK7D,UAAU,OACX,kBAAC,EAAD,MACA,kBAACuE,EAAA,EAAD,CAAWC,SAAS,MACpB,kBAAChE,EAAA,EAAD,CAAMiE,WAAS,EAAC9F,QAAS,GAEvB,kBAAC6B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACvB,kBAAC+D,EAAA,EAAD,CAAaxF,QAAQ,SAASyF,WAAS,EAACxF,MAAO,CAACyF,aAAc,KAC1D,kBAACC,EAAA,EAAD,CACE7E,UAAWD,EAAQ2C,YACnBxD,QAAQ,WACR4F,SAAUZ,EACVH,MAAOlF,GACP,kBAACkG,EAAA,EAAD,CAAUhB,MAAM,YAAYD,KAAK,aAAjC,aAEEhB,EAAUf,KAAI,SAAAlD,GAAO,OACnB,kBAACkG,EAAA,EAAD,CAAUhB,MAAOlF,EAAQkF,MAAOD,KAAMjF,EAAQiF,MAAOjF,EAAQiF,YAMvE,kBAACtD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACjBsC,EAAOS,WACT,kBAAC,EAAD,CAAY7E,QAASA,EAASC,MAAOmE,EAAOS,WAAY3E,SAAUkE,EAAOb,aAAiB,OAQ9Fa,EAAOS,WACP,kBAAClD,EAAA,EAAD,CAAMiE,WAAS,EAAC9F,QAAS,GACrB,kBAAC,EAAD,CAASQ,MAAO,CAAC6F,WAAY,WAAY1E,MAAM,SAASC,MAAO0C,EAAOZ,OAAQtD,SAAUkE,EAAOX,cAC/F,kBAAC,EAAD,CAASnD,MAAO,CAAC6F,WAAY,WAAY1E,MAAM,YAAYC,MAAO0C,EAAOV,UAAWxD,SAAUkE,EAAOT,iBACrG,kBAAC,EAAD,CAASrD,MAAO,CAAC6F,WAAY,WAAY1E,MAAM,eAAeC,MAAO0C,EAAOU,OAAQ5E,SAAUkE,EAAOb,cAGvG,KAIF,kBAAC,EAAD,CAAWlB,KAAMiC,OCzHP8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2ac3843b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport CountUp from 'react-countup';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n        \r\n    }\r\n}))\r\n\r\nfunction ContentBox({country, cases, newCases}) {\r\n    const classes = useStyle();\r\n    return (\r\n            <Box>\r\n                <Typography variant=\"caption\">Total Cases ({country})</Typography>\r\n                <Typography variant=\"h3\" style={{color: \"#d63d59\"}}>\r\n                   \r\n                    <CountUp \r\n                        start={0}\r\n                        end={cases}\r\n                        duration={2}\r\n                        separator=\",\"\r\n                        />\r\n                  \r\n                    \r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom style={{color: \"#d63d59\"}}>+\r\n            \r\n                    \r\n                    <CountUp \r\n                        start={0}\r\n                        end={newCases}\r\n                        duration={2}\r\n                        separator=\",\"\r\n                        />\r\n                  \r\n                \r\n                </Typography>\r\n            </Box>\r\n    )\r\n}\r\n\r\nexport default ContentBox;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    root:{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        padding: \"40px 20px\",\r\n    },\r\n    mainImage:{\r\n        width: 200,\r\n    }\r\n\r\n}))\r\n\r\nfunction MainAppBar() {\r\n    const classes = useStyle();\r\n    return(\r\n\r\n        <div className={classes.root} >\r\n            <img src=\"https://i.ibb.co/7QpKsCX/image.png\" className={classes.mainImage} />\r\n        </div>\r\n        \r\n       \r\n    )\r\n}\r\n\r\nexport default MainAppBar;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    cardStyle: {\r\n        padding: theme.spacing(1), \r\n        borderRadius: 22,\r\n        boxShadow: \"1px 1px 10px 2px #0000001c\",\r\n    },\r\n  }))\r\n\r\n\r\n\r\nfunction InfoBox({title, total, newCases, style}) {\r\n    const classes = useStyle();\r\n    return (\r\n        <Grid item xs={12} sm={4} >\r\n            <Card className={classes.cardStyle} style={style}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                    {title}\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" component=\"h2\">\r\n                   \r\n\r\n                    <CountUp \r\n                        start={0}\r\n                        end={total}\r\n                        duration={2}\r\n                        separator=\",\"\r\n                        />\r\n\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                    +{newCases}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nfunction TableView({data}) {\r\n\r\n    const sortedData = data.sort((a,b) => a.cases > b.cases ? -1 : 1);\r\n\r\n   //console.log(sorted);\r\n\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <div style={{marginTop: 30}}>\r\n            <Typography variant=\"h4\">Cases overview</Typography>\r\n            <TableContainer component={Paper} className={classes.root}>\r\n            <Table aria-label=\"caption table\">\r\n                <caption>Covid-19 data sourced from Worldometers</caption>\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell>Countries</TableCell>\r\n                    <TableCell align=\"right\">Total Cases</TableCell>\r\n                    <TableCell align=\"right\">Deaths</TableCell>\r\n                    <TableCell align=\"right\">Recovered</TableCell>\r\n                    <TableCell align=\"right\">Tests</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {sortedData.map((country) => (\r\n                    <TableRow key={country.country}>\r\n                        <TableCell>\r\n                            <img src={country.countryInfo.flag} width={24} />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {country.country}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Typography variant=\"body-1\" component=\"p\">{country.cases}</Typography> \r\n                            <Typography variant=\"caption\" component=\"p\" color=\"textSecondary\">+{country.todayCases}</Typography>    \r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Typography variant=\"body-1\" component=\"p\">{country.deaths}</Typography> \r\n                            <Typography variant=\"caption\" component=\"p\" color=\"textSecondary\">+{country.todayDeaths}</Typography>  \r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Typography variant=\"body-1\" component=\"p\">{country.recovered}</Typography> \r\n                            <Typography variant=\"caption\" component=\"p\" color=\"textSecondary\">+{country.todayRecovered}</Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{country.tests}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableView\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport ContentBox from './Components/ContentBox';\nimport MainAppBar from \"./Components/MainAppBar\";\nimport InfoBox from \"./Components/InfoBox\";\nimport TableView from './Components/TableView';\n\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n      padding: theme.spacing(2),\n  },\n  selectStyle:{\n    fontSize: 24\n  }\n}))\n\nfunction App() {\n  const classes = useStyle();\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [corona, setCorona] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n      .then((response) => response.json())\n      .then((data) => {\n        setCorona({\n          totalCases: data.cases,\n          active: data.active,\n          deaths: data.deaths,\n          recovered: data.recovered,\n          todayCases: data.todayCases,\n          todayRecovered: data.todayRecovered,\n          todayDeaths: data.todayDeaths,\n          lastUpdate: data.updated\n        })\n      })\n  }, []);\n\n  useEffect(() => {    \n    const getCountryData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        const country = data.map((country) => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(country);\n        setTableData(data);\n      })\n    };\n    getCountryData();\n  }, []);\n\n  const handleCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    const url = countryCode === \"worldwide\" \n      ? `https://disease.sh/v3/covid-19/all`\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    setCountry(countryCode);\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCorona({\n          totalCases: data.cases,\n          active: data.active,\n          deaths: data.deaths,\n          recovered: data.recovered,\n          todayCases: data.todayCases,\n          todayRecovered: data.todayRecovered,\n          todayDeaths: data.todayDeaths,\n          lastUpdate: data.updated\n        })\n      })\n      \n  }\n\n  \n  return (\n    <div className=\"App\">\n        <MainAppBar />\n        <Container maxWidth=\"md\">\n        <Grid container spacing={2}>\n          \n          <Grid item xs={12} sm={6}>\n          <FormControl variant=\"filled\" fullWidth style={{marginBottom: 12}}>\n              <Select \n                className={classes.selectStyle} \n                variant=\"outlined\"\n                onChange={handleCountryChange}\n                value={country}>\n                <MenuItem value=\"worldwide\" name='Worldwide'>Worldwide</MenuItem>\n                {\n                  countries.map(country => (\n                    <MenuItem value={country.value} name={country.name}>{country.name}</MenuItem>\n                  ))\n                } \n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n              { corona.totalCases ?\n              <ContentBox country={country} cases={corona.totalCases} newCases={corona.todayCases} /> : null}\n          </Grid>\n        </Grid>\n\n\n         \n\n\n        { corona.totalCases ?\n          <Grid container spacing={2}>\n              <InfoBox style={{background: \"#ffa5b1\"}} title=\"Deaths\" total={corona.deaths} newCases={corona.todayDeaths} />\n              <InfoBox style={{background: \"#9ee8d7\"}} title=\"Recovered\" total={corona.recovered} newCases={corona.todayRecovered} />\n              <InfoBox style={{background: \"#c3d6ff\"}} title=\"Active Cases\" total={corona.active} newCases={corona.todayCases} />\n          </Grid>\n\n          : null\n        \n      }\n          \n          <TableView data={tableData} />\n\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}